{"ast":null,"code":"import { TestBed } from '@angular/core/testing';\nimport { AttivitaComponent } from './attivita.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AttivitaService } from '../../services/attivita.service';\nimport { AuthService } from '../../services/authService';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { Router } from '@angular/router';\nimport { of } from 'rxjs';\ndescribe('AttivitaComponent', () => {\n  let component;\n  let fixture;\n  let attivitaServiceSpy;\n  let authServiceSpy;\n  let routerSpy;\n  beforeEach(() => {\n    const attivitaServiceStub = jasmine.createSpyObj('AttivitaService', ['getAttivitaByUser']);\n    const authServiceStub = jasmine.createSpyObj('AuthService', ['getUserId', 'logout']);\n    const routerStub = jasmine.createSpyObj('Router', ['navigate']);\n    TestBed.configureTestingModule({\n      imports: [ReactiveFormsModule, HttpClientTestingModule],\n      declarations: [AttivitaComponent],\n      providers: [{\n        provide: AttivitaService,\n        useValue: attivitaServiceStub\n      }, {\n        provide: AuthService,\n        useValue: authServiceStub\n      }, {\n        provide: Router,\n        useValue: routerStub\n      }]\n    }).compileComponents();\n    fixture = TestBed.createComponent(AttivitaComponent);\n    component = fixture.componentInstance;\n    // Stub della welcomeMessage se necessario\n    component.welcomeMessage = 'Hello, Frontend';\n    // Imposta un valore di ritorno per il servizio\n    attivitaServiceSpy = TestBed.inject(AttivitaService);\n    attivitaServiceSpy.getAttivitaByUser.and.returnValue(of([]));\n    fixture.detectChanges();\n  });\n  it('should display welcome message', () => {\n    const messageElement = fixture.nativeElement.querySelector('.welcome-message');\n    expect(messageElement.textContent).toContain('Hello, Frontend');\n  });\n});","map":{"version":3,"names":["TestBed","AttivitaComponent","ReactiveFormsModule","AttivitaService","AuthService","HttpClientTestingModule","Router","of","describe","component","fixture","attivitaServiceSpy","authServiceSpy","routerSpy","beforeEach","attivitaServiceStub","jasmine","createSpyObj","authServiceStub","routerStub","configureTestingModule","imports","declarations","providers","provide","useValue","compileComponents","createComponent","componentInstance","welcomeMessage","inject","getAttivitaByUser","and","returnValue","detectChanges","it","messageElement","nativeElement","querySelector","expect","textContent","toContain"],"sources":["C:\\Users\\arisv\\Desktop\\attivitaUniversitarie\\attivitaUniversitarie_Frontend\\Frontend\\src\\app\\Components\\attivita\\attivita.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { AttivitaComponent } from './attivita.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AttivitaService } from '../../services/attivita.service';\r\nimport { AuthService } from '../../services/authService';\r\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\r\nimport { Router } from '@angular/router';\r\nimport { of } from 'rxjs';\r\n\r\ndescribe('AttivitaComponent', () => {\r\n  let component: AttivitaComponent;\r\n  let fixture: ComponentFixture<AttivitaComponent>;\r\n  let attivitaServiceSpy: jasmine.SpyObj<AttivitaService>;\r\n  let authServiceSpy: jasmine.SpyObj<AuthService>;\r\n  let routerSpy: jasmine.SpyObj<Router>;\r\n\r\n  beforeEach(() => {\r\n    const attivitaServiceStub = jasmine.createSpyObj('AttivitaService', ['getAttivitaByUser']);\r\n    const authServiceStub = jasmine.createSpyObj('AuthService', ['getUserId', 'logout']);\r\n    const routerStub = jasmine.createSpyObj('Router', ['navigate']);\r\n\r\n    TestBed.configureTestingModule({\r\n      imports: [ReactiveFormsModule, HttpClientTestingModule],\r\n      declarations: [AttivitaComponent],\r\n      providers: [\r\n        { provide: AttivitaService, useValue: attivitaServiceStub },\r\n        { provide: AuthService, useValue: authServiceStub },\r\n        { provide: Router, useValue: routerStub },\r\n      ]\r\n    }).compileComponents();\r\n\r\n    fixture = TestBed.createComponent(AttivitaComponent);\r\n    component = fixture.componentInstance;\r\n\r\n    // Stub della welcomeMessage se necessario\r\n    (component as any).welcomeMessage = 'Hello, Frontend';\r\n\r\n    // Imposta un valore di ritorno per il servizio\r\n    attivitaServiceSpy = TestBed.inject(AttivitaService) as jasmine.SpyObj<AttivitaService>;\r\n    attivitaServiceSpy.getAttivitaByUser.and.returnValue(of([]));\r\n\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should display welcome message', () => {\r\n    const messageElement: HTMLElement = fixture.nativeElement.querySelector('.welcome-message');\r\n    expect(messageElement.textContent).toContain('Hello, Frontend');\r\n  });\r\n});\r\n"],"mappings":"AAAA,SAA2BA,OAAO,QAAQ,uBAAuB;AACjE,SAASC,iBAAiB,QAAQ,sBAAsB;AACxD,SAASC,mBAAmB,QAAQ,gBAAgB;AACpD,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,uBAAuB,QAAQ,8BAA8B;AACtE,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,EAAE,QAAQ,MAAM;AAEzBC,QAAQ,CAAC,mBAAmB,EAAE,MAAK;EACjC,IAAIC,SAA4B;EAChC,IAAIC,OAA4C;EAChD,IAAIC,kBAAmD;EACvD,IAAIC,cAA2C;EAC/C,IAAIC,SAAiC;EAErCC,UAAU,CAAC,MAAK;IACd,MAAMC,mBAAmB,GAAGC,OAAO,CAACC,YAAY,CAAC,iBAAiB,EAAE,CAAC,mBAAmB,CAAC,CAAC;IAC1F,MAAMC,eAAe,GAAGF,OAAO,CAACC,YAAY,CAAC,aAAa,EAAE,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IACpF,MAAME,UAAU,GAAGH,OAAO,CAACC,YAAY,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,CAAC;IAE/DjB,OAAO,CAACoB,sBAAsB,CAAC;MAC7BC,OAAO,EAAE,CAACnB,mBAAmB,EAAEG,uBAAuB,CAAC;MACvDiB,YAAY,EAAE,CAACrB,iBAAiB,CAAC;MACjCsB,SAAS,EAAE,CACT;QAAEC,OAAO,EAAErB,eAAe;QAAEsB,QAAQ,EAAEV;MAAmB,CAAE,EAC3D;QAAES,OAAO,EAAEpB,WAAW;QAAEqB,QAAQ,EAAEP;MAAe,CAAE,EACnD;QAAEM,OAAO,EAAElB,MAAM;QAAEmB,QAAQ,EAAEN;MAAU,CAAE;KAE5C,CAAC,CAACO,iBAAiB,EAAE;IAEtBhB,OAAO,GAAGV,OAAO,CAAC2B,eAAe,CAAC1B,iBAAiB,CAAC;IACpDQ,SAAS,GAAGC,OAAO,CAACkB,iBAAiB;IAErC;IACCnB,SAAiB,CAACoB,cAAc,GAAG,iBAAiB;IAErD;IACAlB,kBAAkB,GAAGX,OAAO,CAAC8B,MAAM,CAAC3B,eAAe,CAAoC;IACvFQ,kBAAkB,CAACoB,iBAAiB,CAACC,GAAG,CAACC,WAAW,CAAC1B,EAAE,CAAC,EAAE,CAAC,CAAC;IAE5DG,OAAO,CAACwB,aAAa,EAAE;EACzB,CAAC,CAAC;EAEFC,EAAE,CAAC,gCAAgC,EAAE,MAAK;IACxC,MAAMC,cAAc,GAAgB1B,OAAO,CAAC2B,aAAa,CAACC,aAAa,CAAC,kBAAkB,CAAC;IAC3FC,MAAM,CAACH,cAAc,CAACI,WAAW,CAAC,CAACC,SAAS,CAAC,iBAAiB,CAAC;EACjE,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}